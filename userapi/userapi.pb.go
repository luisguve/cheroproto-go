// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userapi.proto

// Package userapi defines the interface to send and receive messages to get and update
// user-related data.

package userapi

import (
	context1 "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	cheroapi "github.com/luisguve/cheroproto-go/cheroapi"
	context "github.com/luisguve/cheroproto-go/context"
	dataformat "github.com/luisguve/cheroproto-go/dataformat"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// UserHeaderData holds information to be displayed in the header navigation section
// of every page.
type UserHeaderData struct {
	Alias    string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// unread notifications of this user.
	UnreadNotifs []*dataformat.Notif `protobuf:"bytes,3,rep,name=unread_notifs,json=unreadNotifs,proto3" json:"unread_notifs,omitempty"`
	// read notifications of this user.
	ReadNotifs []*dataformat.Notif `protobuf:"bytes,4,rep,name=read_notifs,json=readNotifs,proto3" json:"read_notifs,omitempty"`
	// last time this user created a thread
	LastTimeCreated      *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_time_created,json=lastTimeCreated,proto3" json:"last_time_created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserHeaderData) Reset()         { *m = UserHeaderData{} }
func (m *UserHeaderData) String() string { return proto.CompactTextString(m) }
func (*UserHeaderData) ProtoMessage()    {}
func (*UserHeaderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{0}
}

func (m *UserHeaderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserHeaderData.Unmarshal(m, b)
}
func (m *UserHeaderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserHeaderData.Marshal(b, m, deterministic)
}
func (m *UserHeaderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserHeaderData.Merge(m, src)
}
func (m *UserHeaderData) XXX_Size() int {
	return xxx_messageInfo_UserHeaderData.Size(m)
}
func (m *UserHeaderData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserHeaderData.DiscardUnknown(m)
}

var xxx_messageInfo_UserHeaderData proto.InternalMessageInfo

func (m *UserHeaderData) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *UserHeaderData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserHeaderData) GetUnreadNotifs() []*dataformat.Notif {
	if m != nil {
		return m.UnreadNotifs
	}
	return nil
}

func (m *UserHeaderData) GetReadNotifs() []*dataformat.Notif {
	if m != nil {
		return m.ReadNotifs
	}
	return nil
}

func (m *UserHeaderData) GetLastTimeCreated() *timestamp.Timestamp {
	if m != nil {
		return m.LastTimeCreated
	}
	return nil
}

// UserList holds a list of user ids
type UserList struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{1}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// GetBasicUserDataRequest holds the id of the user to get its basic data
type GetBasicUserDataRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBasicUserDataRequest) Reset()         { *m = GetBasicUserDataRequest{} }
func (m *GetBasicUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetBasicUserDataRequest) ProtoMessage()    {}
func (*GetBasicUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{2}
}

func (m *GetBasicUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBasicUserDataRequest.Unmarshal(m, b)
}
func (m *GetBasicUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBasicUserDataRequest.Marshal(b, m, deterministic)
}
func (m *GetBasicUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBasicUserDataRequest.Merge(m, src)
}
func (m *GetBasicUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetBasicUserDataRequest.Size(m)
}
func (m *GetBasicUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBasicUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBasicUserDataRequest proto.InternalMessageInfo

func (m *GetBasicUserDataRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// UpdateBasicUserDataRequest holds public data of a user that could be updated.
type UpdateBasicUserDataRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PicUrl               string   `protobuf:"bytes,4,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	Alias                string   `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBasicUserDataRequest) Reset()         { *m = UpdateBasicUserDataRequest{} }
func (m *UpdateBasicUserDataRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBasicUserDataRequest) ProtoMessage()    {}
func (*UpdateBasicUserDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{3}
}

func (m *UpdateBasicUserDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBasicUserDataRequest.Unmarshal(m, b)
}
func (m *UpdateBasicUserDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBasicUserDataRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBasicUserDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBasicUserDataRequest.Merge(m, src)
}
func (m *UpdateBasicUserDataRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBasicUserDataRequest.Size(m)
}
func (m *UpdateBasicUserDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBasicUserDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBasicUserDataRequest proto.InternalMessageInfo

func (m *UpdateBasicUserDataRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateBasicUserDataRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateBasicUserDataRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateBasicUserDataRequest) GetPicUrl() string {
	if m != nil {
		return m.PicUrl
	}
	return ""
}

func (m *UpdateBasicUserDataRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type UpdateBasicUserDataResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBasicUserDataResponse) Reset()         { *m = UpdateBasicUserDataResponse{} }
func (m *UpdateBasicUserDataResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBasicUserDataResponse) ProtoMessage()    {}
func (*UpdateBasicUserDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{4}
}

func (m *UpdateBasicUserDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBasicUserDataResponse.Unmarshal(m, b)
}
func (m *UpdateBasicUserDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBasicUserDataResponse.Marshal(b, m, deterministic)
}
func (m *UpdateBasicUserDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBasicUserDataResponse.Merge(m, src)
}
func (m *UpdateBasicUserDataResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBasicUserDataResponse.Size(m)
}
func (m *UpdateBasicUserDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBasicUserDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBasicUserDataResponse proto.InternalMessageInfo

// ReadNotifsRequest holds the id of the user whose unread notifications will be
// marked as read
type ReadNotifsRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadNotifsRequest) Reset()         { *m = ReadNotifsRequest{} }
func (m *ReadNotifsRequest) String() string { return proto.CompactTextString(m) }
func (*ReadNotifsRequest) ProtoMessage()    {}
func (*ReadNotifsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{5}
}

func (m *ReadNotifsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadNotifsRequest.Unmarshal(m, b)
}
func (m *ReadNotifsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadNotifsRequest.Marshal(b, m, deterministic)
}
func (m *ReadNotifsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadNotifsRequest.Merge(m, src)
}
func (m *ReadNotifsRequest) XXX_Size() int {
	return xxx_messageInfo_ReadNotifsRequest.Size(m)
}
func (m *ReadNotifsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadNotifsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadNotifsRequest proto.InternalMessageInfo

func (m *ReadNotifsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ReadNotifsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadNotifsResponse) Reset()         { *m = ReadNotifsResponse{} }
func (m *ReadNotifsResponse) String() string { return proto.CompactTextString(m) }
func (*ReadNotifsResponse) ProtoMessage()    {}
func (*ReadNotifsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{6}
}

func (m *ReadNotifsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadNotifsResponse.Unmarshal(m, b)
}
func (m *ReadNotifsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadNotifsResponse.Marshal(b, m, deterministic)
}
func (m *ReadNotifsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadNotifsResponse.Merge(m, src)
}
func (m *ReadNotifsResponse) XXX_Size() int {
	return xxx_messageInfo_ReadNotifsResponse.Size(m)
}
func (m *ReadNotifsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadNotifsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadNotifsResponse proto.InternalMessageInfo

// ClearNotifsRequest holds the id of the user whose both unread and read
// notifications will be deleted
type ClearNotifsRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearNotifsRequest) Reset()         { *m = ClearNotifsRequest{} }
func (m *ClearNotifsRequest) String() string { return proto.CompactTextString(m) }
func (*ClearNotifsRequest) ProtoMessage()    {}
func (*ClearNotifsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{7}
}

func (m *ClearNotifsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearNotifsRequest.Unmarshal(m, b)
}
func (m *ClearNotifsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearNotifsRequest.Marshal(b, m, deterministic)
}
func (m *ClearNotifsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearNotifsRequest.Merge(m, src)
}
func (m *ClearNotifsRequest) XXX_Size() int {
	return xxx_messageInfo_ClearNotifsRequest.Size(m)
}
func (m *ClearNotifsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearNotifsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearNotifsRequest proto.InternalMessageInfo

func (m *ClearNotifsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ClearNotifsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearNotifsResponse) Reset()         { *m = ClearNotifsResponse{} }
func (m *ClearNotifsResponse) String() string { return proto.CompactTextString(m) }
func (*ClearNotifsResponse) ProtoMessage()    {}
func (*ClearNotifsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{8}
}

func (m *ClearNotifsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearNotifsResponse.Unmarshal(m, b)
}
func (m *ClearNotifsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearNotifsResponse.Marshal(b, m, deterministic)
}
func (m *ClearNotifsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearNotifsResponse.Merge(m, src)
}
func (m *ClearNotifsResponse) XXX_Size() int {
	return xxx_messageInfo_ClearNotifsResponse.Size(m)
}
func (m *ClearNotifsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearNotifsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearNotifsResponse proto.InternalMessageInfo

// FollowUserRequest holds the id of the user which is following and the username
// of the user being followed
type FollowUserRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// user_to_follow indicates the username
	UserToFollow         string   `protobuf:"bytes,2,opt,name=user_to_follow,json=userToFollow,proto3" json:"user_to_follow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowUserRequest) Reset()         { *m = FollowUserRequest{} }
func (m *FollowUserRequest) String() string { return proto.CompactTextString(m) }
func (*FollowUserRequest) ProtoMessage()    {}
func (*FollowUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{9}
}

func (m *FollowUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowUserRequest.Unmarshal(m, b)
}
func (m *FollowUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowUserRequest.Marshal(b, m, deterministic)
}
func (m *FollowUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowUserRequest.Merge(m, src)
}
func (m *FollowUserRequest) XXX_Size() int {
	return xxx_messageInfo_FollowUserRequest.Size(m)
}
func (m *FollowUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowUserRequest proto.InternalMessageInfo

func (m *FollowUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FollowUserRequest) GetUserToFollow() string {
	if m != nil {
		return m.UserToFollow
	}
	return ""
}

type FollowUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowUserResponse) Reset()         { *m = FollowUserResponse{} }
func (m *FollowUserResponse) String() string { return proto.CompactTextString(m) }
func (*FollowUserResponse) ProtoMessage()    {}
func (*FollowUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{10}
}

func (m *FollowUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowUserResponse.Unmarshal(m, b)
}
func (m *FollowUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowUserResponse.Marshal(b, m, deterministic)
}
func (m *FollowUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowUserResponse.Merge(m, src)
}
func (m *FollowUserResponse) XXX_Size() int {
	return xxx_messageInfo_FollowUserResponse.Size(m)
}
func (m *FollowUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FollowUserResponse proto.InternalMessageInfo

// UnfollowUserRequest holds the id of the user which is unfollowing and the username
// of the user losing a follower
type UnfollowUserRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserToUnfollow       string   `protobuf:"bytes,2,opt,name=user_to_unfollow,json=userToUnfollow,proto3" json:"user_to_unfollow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfollowUserRequest) Reset()         { *m = UnfollowUserRequest{} }
func (m *UnfollowUserRequest) String() string { return proto.CompactTextString(m) }
func (*UnfollowUserRequest) ProtoMessage()    {}
func (*UnfollowUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{11}
}

func (m *UnfollowUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnfollowUserRequest.Unmarshal(m, b)
}
func (m *UnfollowUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnfollowUserRequest.Marshal(b, m, deterministic)
}
func (m *UnfollowUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowUserRequest.Merge(m, src)
}
func (m *UnfollowUserRequest) XXX_Size() int {
	return xxx_messageInfo_UnfollowUserRequest.Size(m)
}
func (m *UnfollowUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowUserRequest proto.InternalMessageInfo

func (m *UnfollowUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UnfollowUserRequest) GetUserToUnfollow() string {
	if m != nil {
		return m.UserToUnfollow
	}
	return ""
}

type UnfollowUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfollowUserResponse) Reset()         { *m = UnfollowUserResponse{} }
func (m *UnfollowUserResponse) String() string { return proto.CompactTextString(m) }
func (*UnfollowUserResponse) ProtoMessage()    {}
func (*UnfollowUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{12}
}

func (m *UnfollowUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnfollowUserResponse.Unmarshal(m, b)
}
func (m *UnfollowUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnfollowUserResponse.Marshal(b, m, deterministic)
}
func (m *UnfollowUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowUserResponse.Merge(m, src)
}
func (m *UnfollowUserResponse) XXX_Size() int {
	return xxx_messageInfo_UnfollowUserResponse.Size(m)
}
func (m *UnfollowUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowUserResponse proto.InternalMessageInfo

// SaveThreadRequest holds the id of the user which is saving the thread and the
// information about the thread to be saved.
type SaveThreadRequest struct {
	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Thread               *context.Thread `protobuf:"bytes,2,opt,name=thread,proto3" json:"thread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SaveThreadRequest) Reset()         { *m = SaveThreadRequest{} }
func (m *SaveThreadRequest) String() string { return proto.CompactTextString(m) }
func (*SaveThreadRequest) ProtoMessage()    {}
func (*SaveThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{13}
}

func (m *SaveThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveThreadRequest.Unmarshal(m, b)
}
func (m *SaveThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveThreadRequest.Marshal(b, m, deterministic)
}
func (m *SaveThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveThreadRequest.Merge(m, src)
}
func (m *SaveThreadRequest) XXX_Size() int {
	return xxx_messageInfo_SaveThreadRequest.Size(m)
}
func (m *SaveThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveThreadRequest proto.InternalMessageInfo

func (m *SaveThreadRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SaveThreadRequest) GetThread() *context.Thread {
	if m != nil {
		return m.Thread
	}
	return nil
}

type SaveThreadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveThreadResponse) Reset()         { *m = SaveThreadResponse{} }
func (m *SaveThreadResponse) String() string { return proto.CompactTextString(m) }
func (*SaveThreadResponse) ProtoMessage()    {}
func (*SaveThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{14}
}

func (m *SaveThreadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveThreadResponse.Unmarshal(m, b)
}
func (m *SaveThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveThreadResponse.Marshal(b, m, deterministic)
}
func (m *SaveThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveThreadResponse.Merge(m, src)
}
func (m *SaveThreadResponse) XXX_Size() int {
	return xxx_messageInfo_SaveThreadResponse.Size(m)
}
func (m *SaveThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveThreadResponse proto.InternalMessageInfo

// UndoSaveThreadRequest holds the id of the user which is unsaving the thread and the
// information about the thread to be removed from the user's saved thread list.
type RemoveSavedRequest struct {
	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Thread `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoveSavedRequest) Reset()         { *m = RemoveSavedRequest{} }
func (m *RemoveSavedRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveSavedRequest) ProtoMessage()    {}
func (*RemoveSavedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{15}
}

func (m *RemoveSavedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSavedRequest.Unmarshal(m, b)
}
func (m *RemoveSavedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSavedRequest.Marshal(b, m, deterministic)
}
func (m *RemoveSavedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSavedRequest.Merge(m, src)
}
func (m *RemoveSavedRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveSavedRequest.Size(m)
}
func (m *RemoveSavedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSavedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSavedRequest proto.InternalMessageInfo

func (m *RemoveSavedRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RemoveSavedRequest) GetCtx() *context.Thread {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type RemoveSavedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSavedResponse) Reset()         { *m = RemoveSavedResponse{} }
func (m *RemoveSavedResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveSavedResponse) ProtoMessage()    {}
func (*RemoveSavedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{16}
}

func (m *RemoveSavedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSavedResponse.Unmarshal(m, b)
}
func (m *RemoveSavedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSavedResponse.Marshal(b, m, deterministic)
}
func (m *RemoveSavedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSavedResponse.Merge(m, src)
}
func (m *RemoveSavedResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveSavedResponse.Size(m)
}
func (m *RemoveSavedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSavedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSavedResponse proto.InternalMessageInfo

// ViewUsersRequest is a message for requesting either following or followers users
// data of a given user
type ViewUsersRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// context is either following or followers
	Context string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	// offset indicates how many users to ignore for pagination
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewUsersRequest) Reset()         { *m = ViewUsersRequest{} }
func (m *ViewUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ViewUsersRequest) ProtoMessage()    {}
func (*ViewUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{17}
}

func (m *ViewUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewUsersRequest.Unmarshal(m, b)
}
func (m *ViewUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewUsersRequest.Marshal(b, m, deterministic)
}
func (m *ViewUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewUsersRequest.Merge(m, src)
}
func (m *ViewUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ViewUsersRequest.Size(m)
}
func (m *ViewUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ViewUsersRequest proto.InternalMessageInfo

func (m *ViewUsersRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ViewUsersRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *ViewUsersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// ViewUsersResponse holds a list of basic user data of requested users following
// or followers of a user
type ViewUsersResponse struct {
	BasicUserData        []*dataformat.BasicUserData `protobuf:"bytes,1,rep,name=basic_user_data,json=basicUserData,proto3" json:"basic_user_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ViewUsersResponse) Reset()         { *m = ViewUsersResponse{} }
func (m *ViewUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ViewUsersResponse) ProtoMessage()    {}
func (*ViewUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{18}
}

func (m *ViewUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewUsersResponse.Unmarshal(m, b)
}
func (m *ViewUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewUsersResponse.Marshal(b, m, deterministic)
}
func (m *ViewUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewUsersResponse.Merge(m, src)
}
func (m *ViewUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ViewUsersResponse.Size(m)
}
func (m *ViewUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewUsersResponse proto.InternalMessageInfo

func (m *ViewUsersResponse) GetBasicUserData() []*dataformat.BasicUserData {
	if m != nil {
		return m.BasicUserData
	}
	return nil
}

// ViewUserByUsernameRequest is a message for requesting public data of a user
type ViewUserByUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewUserByUsernameRequest) Reset()         { *m = ViewUserByUsernameRequest{} }
func (m *ViewUserByUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ViewUserByUsernameRequest) ProtoMessage()    {}
func (*ViewUserByUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{19}
}

func (m *ViewUserByUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewUserByUsernameRequest.Unmarshal(m, b)
}
func (m *ViewUserByUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewUserByUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ViewUserByUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewUserByUsernameRequest.Merge(m, src)
}
func (m *ViewUserByUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ViewUserByUsernameRequest.Size(m)
}
func (m *ViewUserByUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewUserByUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ViewUserByUsernameRequest proto.InternalMessageInfo

func (m *ViewUserByUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// ViewUserResponse holds some basic data of a requested user
type ViewUserResponse struct {
	Alias                string               `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Username             string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	PicUrl               string               `protobuf:"bytes,3,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	About                string               `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	UserId               string               `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LastTimeCreated      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=last_time_created,json=lastTimeCreated,proto3" json:"last_time_created,omitempty"`
	FollowersIds         []string             `protobuf:"bytes,7,rep,name=followers_ids,json=followersIds,proto3" json:"followers_ids,omitempty"`
	FollowingIds         []string             `protobuf:"bytes,8,rep,name=following_ids,json=followingIds,proto3" json:"following_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ViewUserResponse) Reset()         { *m = ViewUserResponse{} }
func (m *ViewUserResponse) String() string { return proto.CompactTextString(m) }
func (*ViewUserResponse) ProtoMessage()    {}
func (*ViewUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{20}
}

func (m *ViewUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewUserResponse.Unmarshal(m, b)
}
func (m *ViewUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewUserResponse.Marshal(b, m, deterministic)
}
func (m *ViewUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewUserResponse.Merge(m, src)
}
func (m *ViewUserResponse) XXX_Size() int {
	return xxx_messageInfo_ViewUserResponse.Size(m)
}
func (m *ViewUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewUserResponse proto.InternalMessageInfo

func (m *ViewUserResponse) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *ViewUserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ViewUserResponse) GetPicUrl() string {
	if m != nil {
		return m.PicUrl
	}
	return ""
}

func (m *ViewUserResponse) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *ViewUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ViewUserResponse) GetLastTimeCreated() *timestamp.Timestamp {
	if m != nil {
		return m.LastTimeCreated
	}
	return nil
}

func (m *ViewUserResponse) GetFollowersIds() []string {
	if m != nil {
		return m.FollowersIds
	}
	return nil
}

func (m *ViewUserResponse) GetFollowingIds() []string {
	if m != nil {
		return m.FollowingIds
	}
	return nil
}

// GetDashboardDataRequest holds the user id of the user to request the data for its
// dashboard.
type GetDashboardDataRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDashboardDataRequest) Reset()         { *m = GetDashboardDataRequest{} }
func (m *GetDashboardDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetDashboardDataRequest) ProtoMessage()    {}
func (*GetDashboardDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{21}
}

func (m *GetDashboardDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDashboardDataRequest.Unmarshal(m, b)
}
func (m *GetDashboardDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDashboardDataRequest.Marshal(b, m, deterministic)
}
func (m *GetDashboardDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDashboardDataRequest.Merge(m, src)
}
func (m *GetDashboardDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetDashboardDataRequest.Size(m)
}
func (m *GetDashboardDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDashboardDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDashboardDataRequest proto.InternalMessageInfo

func (m *GetDashboardDataRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// DashboardData holds the header data, the list of users this user is following,
// the list of users that are following this user. the num of threads saved by
// the user and the user id.
type DashboardData struct {
	UserHeaderData *UserHeaderData `protobuf:"bytes,1,opt,name=user_header_data,json=userHeaderData,proto3" json:"user_header_data,omitempty"`
	// ids of users that are following this user.
	FollowersIds []string `protobuf:"bytes,2,rep,name=followers_ids,json=followersIds,proto3" json:"followers_ids,omitempty"`
	// ids of users that this user is following.
	FollowingIds         []string `protobuf:"bytes,3,rep,name=following_ids,json=followingIds,proto3" json:"following_ids,omitempty"`
	SavedThreads         uint32   `protobuf:"varint,4,opt,name=saved_threads,json=savedThreads,proto3" json:"saved_threads,omitempty"`
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DashboardData) Reset()         { *m = DashboardData{} }
func (m *DashboardData) String() string { return proto.CompactTextString(m) }
func (*DashboardData) ProtoMessage()    {}
func (*DashboardData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{22}
}

func (m *DashboardData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardData.Unmarshal(m, b)
}
func (m *DashboardData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardData.Marshal(b, m, deterministic)
}
func (m *DashboardData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardData.Merge(m, src)
}
func (m *DashboardData) XXX_Size() int {
	return xxx_messageInfo_DashboardData.Size(m)
}
func (m *DashboardData) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardData.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardData proto.InternalMessageInfo

func (m *DashboardData) GetUserHeaderData() *UserHeaderData {
	if m != nil {
		return m.UserHeaderData
	}
	return nil
}

func (m *DashboardData) GetFollowersIds() []string {
	if m != nil {
		return m.FollowersIds
	}
	return nil
}

func (m *DashboardData) GetFollowingIds() []string {
	if m != nil {
		return m.FollowingIds
	}
	return nil
}

func (m *DashboardData) GetSavedThreads() uint32 {
	if m != nil {
		return m.SavedThreads
	}
	return 0
}

func (m *DashboardData) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// LoginRequest is a message for requesting the validation of a user's credentials
type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,150,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{23}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// LoginResponse holds the id of the user that just logged in
type LoginResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{24}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type RegisterUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PicUrl               string   `protobuf:"bytes,3,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Alias                string   `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	About                string   `protobuf:"bytes,6,opt,name=about,proto3" json:"about,omitempty"`
	Password             string   `protobuf:"bytes,150,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{25}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterUserRequest) GetPicUrl() string {
	if m != nil {
		return m.PicUrl
	}
	return ""
}

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterUserRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *RegisterUserRequest) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// RegisterUserResponse holds the id of the user that just signed in
type RegisterUserResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{26}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SaveNotifResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveNotifResponse) Reset()         { *m = SaveNotifResponse{} }
func (m *SaveNotifResponse) String() string { return proto.CompactTextString(m) }
func (*SaveNotifResponse) ProtoMessage()    {}
func (*SaveNotifResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{27}
}

func (m *SaveNotifResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveNotifResponse.Unmarshal(m, b)
}
func (m *SaveNotifResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveNotifResponse.Marshal(b, m, deterministic)
}
func (m *SaveNotifResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveNotifResponse.Merge(m, src)
}
func (m *SaveNotifResponse) XXX_Size() int {
	return xxx_messageInfo_SaveNotifResponse.Size(m)
}
func (m *SaveNotifResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveNotifResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveNotifResponse proto.InternalMessageInfo

type CreateThreadRequest struct {
	UserId               string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Thread      `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	PublishDate          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=publish_date,json=publishDate,proto3" json:"publish_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateThreadRequest) Reset()         { *m = CreateThreadRequest{} }
func (m *CreateThreadRequest) String() string { return proto.CompactTextString(m) }
func (*CreateThreadRequest) ProtoMessage()    {}
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{28}
}

func (m *CreateThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateThreadRequest.Unmarshal(m, b)
}
func (m *CreateThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateThreadRequest.Marshal(b, m, deterministic)
}
func (m *CreateThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateThreadRequest.Merge(m, src)
}
func (m *CreateThreadRequest) XXX_Size() int {
	return xxx_messageInfo_CreateThreadRequest.Size(m)
}
func (m *CreateThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateThreadRequest proto.InternalMessageInfo

func (m *CreateThreadRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateThreadRequest) GetCtx() *context.Thread {
	if m != nil {
		return m.Ctx
	}
	return nil
}

func (m *CreateThreadRequest) GetPublishDate() *timestamp.Timestamp {
	if m != nil {
		return m.PublishDate
	}
	return nil
}

type CreateThreadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateThreadResponse) Reset()         { *m = CreateThreadResponse{} }
func (m *CreateThreadResponse) String() string { return proto.CompactTextString(m) }
func (*CreateThreadResponse) ProtoMessage()    {}
func (*CreateThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{29}
}

func (m *CreateThreadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateThreadResponse.Unmarshal(m, b)
}
func (m *CreateThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateThreadResponse.Marshal(b, m, deterministic)
}
func (m *CreateThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateThreadResponse.Merge(m, src)
}
func (m *CreateThreadResponse) XXX_Size() int {
	return xxx_messageInfo_CreateThreadResponse.Size(m)
}
func (m *CreateThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateThreadResponse proto.InternalMessageInfo

type CommentRequest struct {
	UserId               string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Comment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CommentRequest) Reset()         { *m = CommentRequest{} }
func (m *CommentRequest) String() string { return proto.CompactTextString(m) }
func (*CommentRequest) ProtoMessage()    {}
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{30}
}

func (m *CommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentRequest.Unmarshal(m, b)
}
func (m *CommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentRequest.Marshal(b, m, deterministic)
}
func (m *CommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentRequest.Merge(m, src)
}
func (m *CommentRequest) XXX_Size() int {
	return xxx_messageInfo_CommentRequest.Size(m)
}
func (m *CommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommentRequest proto.InternalMessageInfo

func (m *CommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CommentRequest) GetCtx() *context.Comment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type CommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommentResponse) Reset()         { *m = CommentResponse{} }
func (m *CommentResponse) String() string { return proto.CompactTextString(m) }
func (*CommentResponse) ProtoMessage()    {}
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{31}
}

func (m *CommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentResponse.Unmarshal(m, b)
}
func (m *CommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentResponse.Marshal(b, m, deterministic)
}
func (m *CommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentResponse.Merge(m, src)
}
func (m *CommentResponse) XXX_Size() int {
	return xxx_messageInfo_CommentResponse.Size(m)
}
func (m *CommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommentResponse proto.InternalMessageInfo

type SubcommentRequest struct {
	UserId               string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Subcomment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubcommentRequest) Reset()         { *m = SubcommentRequest{} }
func (m *SubcommentRequest) String() string { return proto.CompactTextString(m) }
func (*SubcommentRequest) ProtoMessage()    {}
func (*SubcommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{32}
}

func (m *SubcommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubcommentRequest.Unmarshal(m, b)
}
func (m *SubcommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubcommentRequest.Marshal(b, m, deterministic)
}
func (m *SubcommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubcommentRequest.Merge(m, src)
}
func (m *SubcommentRequest) XXX_Size() int {
	return xxx_messageInfo_SubcommentRequest.Size(m)
}
func (m *SubcommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubcommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubcommentRequest proto.InternalMessageInfo

func (m *SubcommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SubcommentRequest) GetCtx() *context.Subcomment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type SubcommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubcommentResponse) Reset()         { *m = SubcommentResponse{} }
func (m *SubcommentResponse) String() string { return proto.CompactTextString(m) }
func (*SubcommentResponse) ProtoMessage()    {}
func (*SubcommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{33}
}

func (m *SubcommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubcommentResponse.Unmarshal(m, b)
}
func (m *SubcommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubcommentResponse.Marshal(b, m, deterministic)
}
func (m *SubcommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubcommentResponse.Merge(m, src)
}
func (m *SubcommentResponse) XXX_Size() int {
	return xxx_messageInfo_SubcommentResponse.Size(m)
}
func (m *SubcommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubcommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubcommentResponse proto.InternalMessageInfo

type OldThreadRequest struct {
	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Thread `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OldThreadRequest) Reset()         { *m = OldThreadRequest{} }
func (m *OldThreadRequest) String() string { return proto.CompactTextString(m) }
func (*OldThreadRequest) ProtoMessage()    {}
func (*OldThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{34}
}

func (m *OldThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldThreadRequest.Unmarshal(m, b)
}
func (m *OldThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldThreadRequest.Marshal(b, m, deterministic)
}
func (m *OldThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldThreadRequest.Merge(m, src)
}
func (m *OldThreadRequest) XXX_Size() int {
	return xxx_messageInfo_OldThreadRequest.Size(m)
}
func (m *OldThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OldThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OldThreadRequest proto.InternalMessageInfo

func (m *OldThreadRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OldThreadRequest) GetCtx() *context.Thread {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type OldThreadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OldThreadResponse) Reset()         { *m = OldThreadResponse{} }
func (m *OldThreadResponse) String() string { return proto.CompactTextString(m) }
func (*OldThreadResponse) ProtoMessage()    {}
func (*OldThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{35}
}

func (m *OldThreadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldThreadResponse.Unmarshal(m, b)
}
func (m *OldThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldThreadResponse.Marshal(b, m, deterministic)
}
func (m *OldThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldThreadResponse.Merge(m, src)
}
func (m *OldThreadResponse) XXX_Size() int {
	return xxx_messageInfo_OldThreadResponse.Size(m)
}
func (m *OldThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OldThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OldThreadResponse proto.InternalMessageInfo

type OldCommentRequest struct {
	UserId               string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Comment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OldCommentRequest) Reset()         { *m = OldCommentRequest{} }
func (m *OldCommentRequest) String() string { return proto.CompactTextString(m) }
func (*OldCommentRequest) ProtoMessage()    {}
func (*OldCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{36}
}

func (m *OldCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldCommentRequest.Unmarshal(m, b)
}
func (m *OldCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldCommentRequest.Marshal(b, m, deterministic)
}
func (m *OldCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldCommentRequest.Merge(m, src)
}
func (m *OldCommentRequest) XXX_Size() int {
	return xxx_messageInfo_OldCommentRequest.Size(m)
}
func (m *OldCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OldCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OldCommentRequest proto.InternalMessageInfo

func (m *OldCommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OldCommentRequest) GetCtx() *context.Comment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type OldCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OldCommentResponse) Reset()         { *m = OldCommentResponse{} }
func (m *OldCommentResponse) String() string { return proto.CompactTextString(m) }
func (*OldCommentResponse) ProtoMessage()    {}
func (*OldCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{37}
}

func (m *OldCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldCommentResponse.Unmarshal(m, b)
}
func (m *OldCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldCommentResponse.Marshal(b, m, deterministic)
}
func (m *OldCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldCommentResponse.Merge(m, src)
}
func (m *OldCommentResponse) XXX_Size() int {
	return xxx_messageInfo_OldCommentResponse.Size(m)
}
func (m *OldCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OldCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OldCommentResponse proto.InternalMessageInfo

type OldSubcommentRequest struct {
	UserId               string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Subcomment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OldSubcommentRequest) Reset()         { *m = OldSubcommentRequest{} }
func (m *OldSubcommentRequest) String() string { return proto.CompactTextString(m) }
func (*OldSubcommentRequest) ProtoMessage()    {}
func (*OldSubcommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{38}
}

func (m *OldSubcommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldSubcommentRequest.Unmarshal(m, b)
}
func (m *OldSubcommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldSubcommentRequest.Marshal(b, m, deterministic)
}
func (m *OldSubcommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldSubcommentRequest.Merge(m, src)
}
func (m *OldSubcommentRequest) XXX_Size() int {
	return xxx_messageInfo_OldSubcommentRequest.Size(m)
}
func (m *OldSubcommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OldSubcommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OldSubcommentRequest proto.InternalMessageInfo

func (m *OldSubcommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OldSubcommentRequest) GetCtx() *context.Subcomment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type OldSubcommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OldSubcommentResponse) Reset()         { *m = OldSubcommentResponse{} }
func (m *OldSubcommentResponse) String() string { return proto.CompactTextString(m) }
func (*OldSubcommentResponse) ProtoMessage()    {}
func (*OldSubcommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{39}
}

func (m *OldSubcommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OldSubcommentResponse.Unmarshal(m, b)
}
func (m *OldSubcommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OldSubcommentResponse.Marshal(b, m, deterministic)
}
func (m *OldSubcommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldSubcommentResponse.Merge(m, src)
}
func (m *OldSubcommentResponse) XXX_Size() int {
	return xxx_messageInfo_OldSubcommentResponse.Size(m)
}
func (m *OldSubcommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OldSubcommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OldSubcommentResponse proto.InternalMessageInfo

type DeleteThreadRequest struct {
	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Thread `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteThreadRequest) Reset()         { *m = DeleteThreadRequest{} }
func (m *DeleteThreadRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteThreadRequest) ProtoMessage()    {}
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{40}
}

func (m *DeleteThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteThreadRequest.Unmarshal(m, b)
}
func (m *DeleteThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteThreadRequest.Marshal(b, m, deterministic)
}
func (m *DeleteThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteThreadRequest.Merge(m, src)
}
func (m *DeleteThreadRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteThreadRequest.Size(m)
}
func (m *DeleteThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteThreadRequest proto.InternalMessageInfo

func (m *DeleteThreadRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteThreadRequest) GetCtx() *context.Thread {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type DeleteThreadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteThreadResponse) Reset()         { *m = DeleteThreadResponse{} }
func (m *DeleteThreadResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteThreadResponse) ProtoMessage()    {}
func (*DeleteThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{41}
}

func (m *DeleteThreadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteThreadResponse.Unmarshal(m, b)
}
func (m *DeleteThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteThreadResponse.Marshal(b, m, deterministic)
}
func (m *DeleteThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteThreadResponse.Merge(m, src)
}
func (m *DeleteThreadResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteThreadResponse.Size(m)
}
func (m *DeleteThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteThreadResponse proto.InternalMessageInfo

type DeleteCommentRequest struct {
	UserId               string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Comment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{42}
}

func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteCommentRequest) GetCtx() *context.Comment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type DeleteCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentResponse) Reset()         { *m = DeleteCommentResponse{} }
func (m *DeleteCommentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentResponse) ProtoMessage()    {}
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{43}
}

func (m *DeleteCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentResponse.Unmarshal(m, b)
}
func (m *DeleteCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentResponse.Merge(m, src)
}
func (m *DeleteCommentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentResponse.Size(m)
}
func (m *DeleteCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentResponse proto.InternalMessageInfo

type DeleteSubcommentRequest struct {
	UserId               string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctx                  *context.Subcomment `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeleteSubcommentRequest) Reset()         { *m = DeleteSubcommentRequest{} }
func (m *DeleteSubcommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubcommentRequest) ProtoMessage()    {}
func (*DeleteSubcommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{44}
}

func (m *DeleteSubcommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubcommentRequest.Unmarshal(m, b)
}
func (m *DeleteSubcommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubcommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubcommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubcommentRequest.Merge(m, src)
}
func (m *DeleteSubcommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubcommentRequest.Size(m)
}
func (m *DeleteSubcommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubcommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubcommentRequest proto.InternalMessageInfo

func (m *DeleteSubcommentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteSubcommentRequest) GetCtx() *context.Subcomment {
	if m != nil {
		return m.Ctx
	}
	return nil
}

type DeleteSubcommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubcommentResponse) Reset()         { *m = DeleteSubcommentResponse{} }
func (m *DeleteSubcommentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSubcommentResponse) ProtoMessage()    {}
func (*DeleteSubcommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{45}
}

func (m *DeleteSubcommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubcommentResponse.Unmarshal(m, b)
}
func (m *DeleteSubcommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubcommentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSubcommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubcommentResponse.Merge(m, src)
}
func (m *DeleteSubcommentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSubcommentResponse.Size(m)
}
func (m *DeleteSubcommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubcommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubcommentResponse proto.InternalMessageInfo

type RecentActivityRequest struct {
	// discard_ids is a map of user_ids to activity from the user referred to by
	// the key that must not be returned back, since it's content the user has
	// already seen.
	DiscardIds map[string]*dataformat.Activity `protobuf:"bytes,1,rep,name=discard_ids,json=discardIds,proto3" json:"discard_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// users holds the list of users to get their activity.
	Users                []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecentActivityRequest) Reset()         { *m = RecentActivityRequest{} }
func (m *RecentActivityRequest) String() string { return proto.CompactTextString(m) }
func (*RecentActivityRequest) ProtoMessage()    {}
func (*RecentActivityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{46}
}

func (m *RecentActivityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecentActivityRequest.Unmarshal(m, b)
}
func (m *RecentActivityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecentActivityRequest.Marshal(b, m, deterministic)
}
func (m *RecentActivityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecentActivityRequest.Merge(m, src)
}
func (m *RecentActivityRequest) XXX_Size() int {
	return xxx_messageInfo_RecentActivityRequest.Size(m)
}
func (m *RecentActivityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecentActivityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecentActivityRequest proto.InternalMessageInfo

func (m *RecentActivityRequest) GetDiscardIds() map[string]*dataformat.Activity {
	if m != nil {
		return m.DiscardIds
	}
	return nil
}

func (m *RecentActivityRequest) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type RecentActivityResponse struct {
	// references is a map of section ids to activity.
	References           map[string]*dataformat.Activity `protobuf:"bytes,1,rep,name=references,proto3" json:"references,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RecentActivityResponse) Reset()         { *m = RecentActivityResponse{} }
func (m *RecentActivityResponse) String() string { return proto.CompactTextString(m) }
func (*RecentActivityResponse) ProtoMessage()    {}
func (*RecentActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{47}
}

func (m *RecentActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecentActivityResponse.Unmarshal(m, b)
}
func (m *RecentActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecentActivityResponse.Marshal(b, m, deterministic)
}
func (m *RecentActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecentActivityResponse.Merge(m, src)
}
func (m *RecentActivityResponse) XXX_Size() int {
	return xxx_messageInfo_RecentActivityResponse.Size(m)
}
func (m *RecentActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecentActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecentActivityResponse proto.InternalMessageInfo

func (m *RecentActivityResponse) GetReferences() map[string]*dataformat.Activity {
	if m != nil {
		return m.References
	}
	return nil
}

type SavedThreadsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// discard_ids is a map of section names mapped to content ids that must not be
	// returned back, since it's content the user has already seen.
	DiscardIds           map[string]*cheroapi.IdList `protobuf:"bytes,2,rep,name=discard_ids,json=discardIds,proto3" json:"discard_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SavedThreadsRequest) Reset()         { *m = SavedThreadsRequest{} }
func (m *SavedThreadsRequest) String() string { return proto.CompactTextString(m) }
func (*SavedThreadsRequest) ProtoMessage()    {}
func (*SavedThreadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{48}
}

func (m *SavedThreadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedThreadsRequest.Unmarshal(m, b)
}
func (m *SavedThreadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedThreadsRequest.Marshal(b, m, deterministic)
}
func (m *SavedThreadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedThreadsRequest.Merge(m, src)
}
func (m *SavedThreadsRequest) XXX_Size() int {
	return xxx_messageInfo_SavedThreadsRequest.Size(m)
}
func (m *SavedThreadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedThreadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavedThreadsRequest proto.InternalMessageInfo

func (m *SavedThreadsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SavedThreadsRequest) GetDiscardIds() map[string]*cheroapi.IdList {
	if m != nil {
		return m.DiscardIds
	}
	return nil
}

type SavedThreadsResponse struct {
	// references holds a list of thread ids for each section.
	References           map[string]*cheroapi.IdList `protobuf:"bytes,1,rep,name=references,proto3" json:"references,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SavedThreadsResponse) Reset()         { *m = SavedThreadsResponse{} }
func (m *SavedThreadsResponse) String() string { return proto.CompactTextString(m) }
func (*SavedThreadsResponse) ProtoMessage()    {}
func (*SavedThreadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9b6856a7d7dae4b, []int{49}
}

func (m *SavedThreadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedThreadsResponse.Unmarshal(m, b)
}
func (m *SavedThreadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedThreadsResponse.Marshal(b, m, deterministic)
}
func (m *SavedThreadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedThreadsResponse.Merge(m, src)
}
func (m *SavedThreadsResponse) XXX_Size() int {
	return xxx_messageInfo_SavedThreadsResponse.Size(m)
}
func (m *SavedThreadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedThreadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SavedThreadsResponse proto.InternalMessageInfo

func (m *SavedThreadsResponse) GetReferences() map[string]*cheroapi.IdList {
	if m != nil {
		return m.References
	}
	return nil
}

func init() {
	proto.RegisterType((*UserHeaderData)(nil), "userapi.UserHeaderData")
	proto.RegisterType((*UserList)(nil), "userapi.UserList")
	proto.RegisterType((*GetBasicUserDataRequest)(nil), "userapi.GetBasicUserDataRequest")
	proto.RegisterType((*UpdateBasicUserDataRequest)(nil), "userapi.UpdateBasicUserDataRequest")
	proto.RegisterType((*UpdateBasicUserDataResponse)(nil), "userapi.UpdateBasicUserDataResponse")
	proto.RegisterType((*ReadNotifsRequest)(nil), "userapi.ReadNotifsRequest")
	proto.RegisterType((*ReadNotifsResponse)(nil), "userapi.ReadNotifsResponse")
	proto.RegisterType((*ClearNotifsRequest)(nil), "userapi.ClearNotifsRequest")
	proto.RegisterType((*ClearNotifsResponse)(nil), "userapi.ClearNotifsResponse")
	proto.RegisterType((*FollowUserRequest)(nil), "userapi.FollowUserRequest")
	proto.RegisterType((*FollowUserResponse)(nil), "userapi.FollowUserResponse")
	proto.RegisterType((*UnfollowUserRequest)(nil), "userapi.UnfollowUserRequest")
	proto.RegisterType((*UnfollowUserResponse)(nil), "userapi.UnfollowUserResponse")
	proto.RegisterType((*SaveThreadRequest)(nil), "userapi.SaveThreadRequest")
	proto.RegisterType((*SaveThreadResponse)(nil), "userapi.SaveThreadResponse")
	proto.RegisterType((*RemoveSavedRequest)(nil), "userapi.RemoveSavedRequest")
	proto.RegisterType((*RemoveSavedResponse)(nil), "userapi.RemoveSavedResponse")
	proto.RegisterType((*ViewUsersRequest)(nil), "userapi.ViewUsersRequest")
	proto.RegisterType((*ViewUsersResponse)(nil), "userapi.ViewUsersResponse")
	proto.RegisterType((*ViewUserByUsernameRequest)(nil), "userapi.ViewUserByUsernameRequest")
	proto.RegisterType((*ViewUserResponse)(nil), "userapi.ViewUserResponse")
	proto.RegisterType((*GetDashboardDataRequest)(nil), "userapi.GetDashboardDataRequest")
	proto.RegisterType((*DashboardData)(nil), "userapi.DashboardData")
	proto.RegisterType((*LoginRequest)(nil), "userapi.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "userapi.LoginResponse")
	proto.RegisterType((*RegisterUserRequest)(nil), "userapi.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "userapi.RegisterUserResponse")
	proto.RegisterType((*SaveNotifResponse)(nil), "userapi.SaveNotifResponse")
	proto.RegisterType((*CreateThreadRequest)(nil), "userapi.CreateThreadRequest")
	proto.RegisterType((*CreateThreadResponse)(nil), "userapi.CreateThreadResponse")
	proto.RegisterType((*CommentRequest)(nil), "userapi.CommentRequest")
	proto.RegisterType((*CommentResponse)(nil), "userapi.CommentResponse")
	proto.RegisterType((*SubcommentRequest)(nil), "userapi.SubcommentRequest")
	proto.RegisterType((*SubcommentResponse)(nil), "userapi.SubcommentResponse")
	proto.RegisterType((*OldThreadRequest)(nil), "userapi.OldThreadRequest")
	proto.RegisterType((*OldThreadResponse)(nil), "userapi.OldThreadResponse")
	proto.RegisterType((*OldCommentRequest)(nil), "userapi.OldCommentRequest")
	proto.RegisterType((*OldCommentResponse)(nil), "userapi.OldCommentResponse")
	proto.RegisterType((*OldSubcommentRequest)(nil), "userapi.OldSubcommentRequest")
	proto.RegisterType((*OldSubcommentResponse)(nil), "userapi.OldSubcommentResponse")
	proto.RegisterType((*DeleteThreadRequest)(nil), "userapi.DeleteThreadRequest")
	proto.RegisterType((*DeleteThreadResponse)(nil), "userapi.DeleteThreadResponse")
	proto.RegisterType((*DeleteCommentRequest)(nil), "userapi.DeleteCommentRequest")
	proto.RegisterType((*DeleteCommentResponse)(nil), "userapi.DeleteCommentResponse")
	proto.RegisterType((*DeleteSubcommentRequest)(nil), "userapi.DeleteSubcommentRequest")
	proto.RegisterType((*DeleteSubcommentResponse)(nil), "userapi.DeleteSubcommentResponse")
	proto.RegisterType((*RecentActivityRequest)(nil), "userapi.RecentActivityRequest")
	proto.RegisterMapType((map[string]*dataformat.Activity)(nil), "userapi.RecentActivityRequest.DiscardIdsEntry")
	proto.RegisterType((*RecentActivityResponse)(nil), "userapi.RecentActivityResponse")
	proto.RegisterMapType((map[string]*dataformat.Activity)(nil), "userapi.RecentActivityResponse.ReferencesEntry")
	proto.RegisterType((*SavedThreadsRequest)(nil), "userapi.SavedThreadsRequest")
	proto.RegisterMapType((map[string]*cheroapi.IdList)(nil), "userapi.SavedThreadsRequest.DiscardIdsEntry")
	proto.RegisterType((*SavedThreadsResponse)(nil), "userapi.SavedThreadsResponse")
	proto.RegisterMapType((map[string]*cheroapi.IdList)(nil), "userapi.SavedThreadsResponse.ReferencesEntry")
}

func init() {
	proto.RegisterFile("userapi.proto", fileDescriptor_e9b6856a7d7dae4b)
}

var fileDescriptor_e9b6856a7d7dae4b = []byte{
	// 1701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x96, 0x2c, 0x5f, 0x8f, 0x2c, 0x5b, 0x1a, 0xc9, 0xb6, 0xc2, 0xdc, 0x1c, 0x26, 0x3f, 0x7e,
	0xb7, 0x4d, 0x64, 0x40, 0x05, 0xda, 0xa0, 0x40, 0x0b, 0x38, 0x76, 0xe2, 0x3a, 0x88, 0xe3, 0x44,
	0x8e, 0x82, 0xa6, 0x40, 0x21, 0x50, 0xe2, 0x48, 0x26, 0x42, 0x91, 0x2a, 0x39, 0x74, 0xe2, 0xb7,
	0xe8, 0xaa, 0xcb, 0x2e, 0xfa, 0x1c, 0x4d, 0x5f, 0xa2, 0x5d, 0xf5, 0x41, 0xba, 0x2e, 0x66, 0x38,
	0xa4, 0x0e, 0x6f, 0x92, 0x0c, 0x68, 0xa7, 0xe1, 0x9c, 0xfb, 0x6d, 0xce, 0x27, 0x28, 0x79, 0x2e,
	0x75, 0xb4, 0x91, 0xd1, 0x18, 0x39, 0x36, 0xb3, 0xc9, 0x8a, 0x3c, 0x2a, 0x1b, 0xbd, 0x0b, 0xea,
	0xd8, 0xe1, 0x85, 0x52, 0xea, 0xd9, 0x16, 0xa3, 0x1f, 0x99, 0x3c, 0x56, 0x74, 0x8d, 0x69, 0x9d,
	0xbe, 0xed, 0x0c, 0xb5, 0xe0, 0xd3, 0xdd, 0x81, 0x6d, 0x0f, 0x4c, 0xba, 0x2f, 0x4e, 0x5d, 0xaf,
	0xbf, 0xcf, 0x8c, 0x21, 0x75, 0x99, 0x36, 0x1c, 0xf9, 0x04, 0xea, 0xbf, 0x79, 0xd8, 0x68, 0xbb,
	0xd4, 0xf9, 0x9e, 0x6a, 0x3a, 0x75, 0x8e, 0x34, 0xa6, 0x91, 0x1a, 0x2c, 0x69, 0xa6, 0xa1, 0xb9,
	0xf5, 0xfc, 0x6e, 0x7e, 0x6f, 0xad, 0xe5, 0x1f, 0x88, 0x02, 0xab, 0xdc, 0x0c, 0x4b, 0x1b, 0xd2,
	0xfa, 0x82, 0xb8, 0x08, 0xcf, 0xe4, 0x2b, 0x28, 0x79, 0x96, 0x43, 0x35, 0xbd, 0x63, 0xd9, 0xcc,
	0xe8, 0xbb, 0xf5, 0xc2, 0x6e, 0x61, 0xaf, 0xd8, 0xac, 0x34, 0xb8, 0x41, 0xd2, 0x9e, 0x97, 0xfc,
	0xa6, 0xb5, 0xee, 0xd3, 0x89, 0x83, 0x4b, 0x9a, 0x50, 0xc4, 0x5c, 0x8b, 0x59, 0x5c, 0x80, 0x78,
	0x9e, 0x41, 0xc5, 0xd4, 0x5c, 0xd6, 0xe1, 0x8e, 0x74, 0x7a, 0x0e, 0xd5, 0x18, 0xd5, 0xeb, 0x4b,
	0xbb, 0xf9, 0xbd, 0x62, 0x53, 0x69, 0xf8, 0xde, 0x36, 0x02, 0x6f, 0x1b, 0x6f, 0x02, 0x6f, 0x5b,
	0x9b, 0x9c, 0x89, 0x1f, 0x0f, 0x7d, 0x16, 0xf5, 0x16, 0xac, 0x72, 0xbf, 0x5f, 0x18, 0x2e, 0x23,
	0x65, 0x28, 0x18, 0x3a, 0xf7, 0xb7, 0xb0, 0xb7, 0xd6, 0xe2, 0x3f, 0xd5, 0x26, 0xec, 0x1c, 0x53,
	0xf6, 0x44, 0x73, 0x8d, 0x1e, 0xa7, 0xe2, 0x71, 0x69, 0xd1, 0x9f, 0x3d, 0xea, 0x32, 0xb2, 0x03,
	0x22, 0x1f, 0x1d, 0x43, 0x97, 0x01, 0x5a, 0xe6, 0xc7, 0x13, 0x5d, 0xfd, 0x3d, 0x0f, 0x4a, 0x7b,
	0xa4, 0x6b, 0x8c, 0x5e, 0x8b, 0x6f, 0x62, 0x64, 0x77, 0xa1, 0xa8, 0x53, 0xb7, 0xe7, 0x18, 0x23,
	0x66, 0xd8, 0x56, 0xbd, 0x20, 0xae, 0xf1, 0x27, 0x2e, 0x76, 0x64, 0xf4, 0x3a, 0x9e, 0x63, 0xd6,
	0x17, 0x7d, 0xb1, 0x23, 0xa3, 0xd7, 0x76, 0xcc, 0x71, 0x1a, 0x97, 0x50, 0x1a, 0xd5, 0xdb, 0x70,
	0x33, 0xd5, 0x46, 0x77, 0x64, 0x5b, 0x2e, 0x55, 0x1f, 0x42, 0xa5, 0x15, 0xc6, 0x7a, 0xaa, 0xc7,
	0x35, 0x20, 0x98, 0x5a, 0xca, 0x78, 0x04, 0xe4, 0xd0, 0xa4, 0x9a, 0x33, 0xa3, 0x90, 0x2d, 0xa8,
	0x46, 0xc8, 0xa5, 0x94, 0x16, 0x54, 0x9e, 0xd9, 0xa6, 0x69, 0x7f, 0xe0, 0x36, 0x4e, 0x8d, 0xe1,
	0x03, 0xd8, 0x10, 0x17, 0xcc, 0xee, 0xf4, 0x05, 0x97, 0x8c, 0xe4, 0x3a, 0xff, 0xfa, 0xc6, 0xf6,
	0x25, 0x71, 0x7b, 0xb1, 0x4c, 0xa9, 0xe9, 0x07, 0xa8, 0xb6, 0xad, 0xfe, 0xec, 0xba, 0xf6, 0xa0,
	0x1c, 0xe8, 0xf2, 0xac, 0x88, 0xb6, 0x0d, 0x5f, 0x5b, 0x20, 0x4d, 0xdd, 0x86, 0x5a, 0x54, 0xb2,
	0xd4, 0xd8, 0x86, 0xca, 0xb9, 0x76, 0x49, 0xdf, 0x5c, 0xf0, 0xba, 0x9e, 0xaa, 0xef, 0xff, 0xb0,
	0xcc, 0x04, 0xa5, 0xd0, 0x52, 0x6c, 0x6e, 0x36, 0x82, 0xb6, 0x97, 0x02, 0xe4, 0x35, 0x77, 0x0f,
	0x8b, 0x95, 0xca, 0x5e, 0xf1, 0x24, 0x0d, 0xed, 0x4b, 0xca, 0xef, 0xa6, 0x6b, 0xbb, 0x07, 0x85,
	0x1e, 0xfb, 0x98, 0xa5, 0x8a, 0xdf, 0xf1, 0x8c, 0x45, 0x24, 0x4a, 0x45, 0x3f, 0x41, 0xf9, 0xad,
	0x41, 0x85, 0xa7, 0x53, 0xb3, 0x4e, 0xea, 0xb0, 0x22, 0x45, 0xcb, 0xd8, 0x05, 0x47, 0xb2, 0x0d,
	0xcb, 0x76, 0xbf, 0xef, 0x52, 0x26, 0xaa, 0xbd, 0xd4, 0x92, 0x27, 0xf5, 0x2d, 0x54, 0x90, 0x78,
	0x5f, 0x27, 0x39, 0x80, 0xcd, 0x2e, 0x2f, 0xe4, 0x8e, 0xd0, 0xc2, 0x07, 0x87, 0xe8, 0xe2, 0x62,
	0xf3, 0x06, 0x9e, 0x22, 0xd1, 0x5a, 0x2f, 0x75, 0xf1, 0x51, 0xfd, 0x1a, 0x6e, 0x04, 0x72, 0x9f,
	0x5c, 0xb5, 0x65, 0xe3, 0x05, 0xf6, 0xe3, 0xde, 0xcc, 0x47, 0x7b, 0x53, 0xfd, 0x6d, 0x61, 0xec,
	0x70, 0x68, 0xd0, 0xf5, 0x87, 0x27, 0x6a, 0xe0, 0x42, 0xa2, 0x81, 0xbb, 0xb6, 0xc7, 0x64, 0x5f,
	0xfb, 0x07, 0x1c, 0xd1, 0xa5, 0x48, 0x44, 0x53, 0x07, 0xe3, 0xf2, 0xb5, 0x07, 0x23, 0xb9, 0x0f,
	0x25, 0xbf, 0x64, 0xa9, 0xe3, 0x76, 0xf8, 0x58, 0x5c, 0x11, 0x63, 0x71, 0x3d, 0xfc, 0x78, 0xa2,
	0xbb, 0x63, 0x22, 0xc3, 0x1a, 0x08, 0xa2, 0x55, 0x4c, 0x64, 0x58, 0x83, 0x93, 0x70, 0x88, 0x1e,
	0x69, 0xee, 0x45, 0xd7, 0xd6, 0x1c, 0x7d, 0xa6, 0x21, 0xfa, 0x4f, 0x1e, 0x4a, 0x11, 0x0e, 0x72,
	0x20, 0xdb, 0xed, 0x42, 0xbc, 0x50, 0x41, 0x8e, 0xb9, 0x5b, 0x3b, 0x8d, 0xe0, 0x9d, 0x8c, 0xbe,
	0x60, 0x7e, 0x1f, 0xa2, 0x17, 0x2d, 0xe1, 0xd2, 0xc2, 0x2c, 0x2e, 0x15, 0x92, 0x2e, 0x71, 0x22,
	0x97, 0x17, 0x7d, 0xc7, 0x6f, 0x39, 0x57, 0xe4, 0xa6, 0xd4, 0x5a, 0x17, 0x1f, 0xfd, 0x1e, 0x71,
	0x33, 0x53, 0xa4, 0x1e, 0xc3, 0xfa, 0x0b, 0x7b, 0x60, 0x58, 0x33, 0x54, 0x17, 0xb9, 0x09, 0xab,
	0x23, 0xcd, 0x75, 0x3f, 0xd8, 0x8e, 0x5e, 0xff, 0x55, 0x5e, 0x06, 0x1f, 0xd4, 0x3d, 0x28, 0x49,
	0x41, 0xb2, 0xec, 0x32, 0xe3, 0xf9, 0x29, 0xcf, 0x9b, 0x75, 0x60, 0xb8, 0x8c, 0x3a, 0x78, 0xba,
	0xd5, 0x60, 0x89, 0x0e, 0x35, 0xc3, 0x0c, 0xea, 0x54, 0x1c, 0x08, 0x81, 0x45, 0x54, 0xa3, 0x8b,
	0x93, 0xeb, 0x13, 0x5b, 0xbf, 0x18, 0xb3, 0x3e, 0xf5, 0xf1, 0x19, 0x57, 0xf4, 0x32, 0xae, 0xe8,
	0x89, 0x9e, 0xee, 0x43, 0x2d, 0x6a, 0xfe, 0x34, 0x87, 0xab, 0xfe, 0x6c, 0xf5, 0x17, 0x87, 0x60,
	0x34, 0xfd, 0x92, 0x87, 0xaa, 0x5f, 0xdf, 0x33, 0xce, 0xdc, 0xe9, 0x53, 0x90, 0x7c, 0x0b, 0xeb,
	0x23, 0xaf, 0x6b, 0x1a, 0xee, 0x05, 0xaf, 0x49, 0x2a, 0x82, 0x33, 0xb9, 0xd5, 0x8a, 0x92, 0xfe,
	0x48, 0x63, 0x94, 0xbf, 0x0d, 0x51, 0x8b, 0xa4, 0xa9, 0xa7, 0xb0, 0x71, 0x68, 0x0f, 0x87, 0xd4,
	0x62, 0x53, 0x8d, 0x54, 0xb1, 0x91, 0xe5, 0xd0, 0xc8, 0x80, 0x5d, 0xcc, 0xea, 0x0a, 0x6c, 0x86,
	0xe2, 0xa4, 0x86, 0x73, 0xa8, 0x9c, 0x7b, 0xdd, 0xde, 0x8c, 0x4a, 0xfe, 0x87, 0x95, 0x54, 0x43,
	0x25, 0x48, 0x82, 0xd0, 0xc3, 0xdf, 0x1e, 0x24, 0x54, 0xaa, 0x7a, 0x09, 0xe5, 0x33, 0x53, 0x9f,
	0x5b, 0xcc, 0x79, 0x72, 0x91, 0xbc, 0xf0, 0x81, 0xe3, 0x1f, 0xe7, 0x19, 0xb4, 0x1a, 0x10, 0x2c,
	0x51, 0xea, 0x79, 0x0b, 0xb5, 0x33, 0x53, 0x9f, 0x7f, 0xe8, 0x76, 0x60, 0x2b, 0x26, 0x57, 0x2a,
	0x7c, 0x0d, 0xd5, 0x23, 0x6a, 0xd2, 0x39, 0x16, 0x2d, 0xaf, 0xba, 0xa8, 0xc8, 0xb0, 0x26, 0xe4,
	0xf7, 0x79, 0x86, 0x71, 0x07, 0xb6, 0x62, 0x42, 0xa5, 0xb6, 0x77, 0xb0, 0xe3, 0x5f, 0xcc, 0x3f,
	0x98, 0x0a, 0xd4, 0x93, 0xa2, 0xa5, 0xda, 0xbf, 0xf2, 0xb0, 0xd5, 0xa2, 0x3d, 0x6a, 0xb1, 0x83,
	0x1e, 0x33, 0x2e, 0x0d, 0x76, 0x15, 0x68, 0x3d, 0x83, 0xa2, 0x6e, 0xb8, 0x3d, 0xcd, 0xd1, 0x3b,
	0x01, 0x10, 0x28, 0x36, 0x1b, 0xe1, 0xf3, 0x92, 0xca, 0xd4, 0x38, 0xf2, 0x39, 0x4e, 0x74, 0xf7,
	0xa9, 0xc5, 0x9c, 0xab, 0x16, 0xe8, 0xe1, 0x07, 0x3e, 0xe9, 0x38, 0x73, 0xf0, 0xd2, 0xf8, 0x07,
	0xe5, 0x1c, 0x36, 0x63, 0x4c, 0x1c, 0x7a, 0xbc, 0xa7, 0x57, 0xd2, 0x57, 0xfe, 0x93, 0x7c, 0x0e,
	0x4b, 0x97, 0x9a, 0xe9, 0x51, 0xe9, 0x6a, 0x0d, 0x2f, 0x32, 0xa1, 0x09, 0x3e, 0xc9, 0x37, 0x0b,
	0x8f, 0xf3, 0xea, 0x9f, 0x79, 0xd8, 0x8e, 0x1b, 0x28, 0x87, 0xe4, 0x19, 0x80, 0x43, 0xfb, 0xd4,
	0xa1, 0x56, 0x8f, 0x06, 0x5e, 0xed, 0x67, 0x7a, 0xe5, 0x33, 0x35, 0x5a, 0x21, 0x87, 0x74, 0x6b,
	0x2c, 0x82, 0x3b, 0x10, 0xbb, 0x9e, 0x83, 0x03, 0x7f, 0xe7, 0xa1, 0x7a, 0x8e, 0xde, 0xcf, 0xa9,
	0xa5, 0x70, 0x1a, 0xcd, 0xd6, 0x82, 0xf0, 0xeb, 0x61, 0xe8, 0x57, 0x8a, 0xac, 0x49, 0xb9, 0x52,
	0xda, 0xb3, 0x64, 0xe5, 0x61, 0xd4, 0xa9, 0xed, 0x86, 0x80, 0xe2, 0x23, 0x8d, 0x19, 0xa6, 0xa9,
	0x8d, 0xba, 0x8d, 0x13, 0x9d, 0x23, 0x49, 0xec, 0xd6, 0x1f, 0x79, 0xa8, 0x45, 0x4d, 0x91, 0x59,
	0x39, 0x4d, 0xc9, 0xca, 0xa3, 0x0c, 0xeb, 0x67, 0xc8, 0x49, 0x7b, 0x96, 0x9c, 0x5c, 0xdb, 0xfc,
	0xe6, 0xa7, 0x32, 0xac, 0x1d, 0x3a, 0x9e, 0x2e, 0xf6, 0x6d, 0xf2, 0x0a, 0x2a, 0xc7, 0x94, 0xc5,
	0xfe, 0x28, 0xd8, 0x0d, 0x8d, 0xce, 0xc0, 0xca, 0x4a, 0xd6, 0x86, 0xa6, 0xe6, 0x48, 0x17, 0xaa,
	0x29, 0x40, 0x94, 0xdc, 0x1f, 0x73, 0x64, 0x42, 0x69, 0xe5, 0xc1, 0x64, 0x22, 0xd9, 0xee, 0x39,
	0xf2, 0x1a, 0xca, 0x71, 0xcb, 0x66, 0x30, 0x3a, 0x1b, 0x3a, 0xa8, 0x39, 0xf2, 0x02, 0xaa, 0x32,
	0x10, 0xcf, 0xf0, 0x5e, 0x38, 0x5d, 0x6a, 0x25, 0x12, 0x0a, 0x1e, 0x6d, 0x35, 0x47, 0x9e, 0x43,
	0xe9, 0x54, 0x73, 0xde, 0x1f, 0x98, 0xe6, 0x81, 0xcb, 0x91, 0x34, 0x51, 0x50, 0x77, 0xc6, 0x60,
	0xb8, 0x72, 0x33, 0xf5, 0x2e, 0x74, 0xf6, 0x39, 0x14, 0x11, 0x8e, 0x26, 0x63, 0xea, 0x24, 0x18,
	0x57, 0x6e, 0xa5, 0x5f, 0x86, 0xb2, 0x8e, 0x01, 0xc6, 0x40, 0x19, 0x19, 0x95, 0x40, 0xe4, 0xc8,
	0xa8, 0x14, 0x64, 0x9d, 0x23, 0xa7, 0xb0, 0x8e, 0x11, 0x30, 0x19, 0x2b, 0x4e, 0x81, 0xdc, 0xca,
	0xed, 0x8c, 0x5b, 0x6c, 0xd7, 0x18, 0xe1, 0x22, 0xbb, 0x12, 0x68, 0x1a, 0xd9, 0x95, 0x02, 0x89,
	0x45, 0xb0, 0x10, 0x84, 0x25, 0x38, 0xb4, 0x71, 0xa8, 0x8c, 0x82, 0x95, 0x86, 0x7a, 0x73, 0xe4,
	0x08, 0xd6, 0x42, 0x60, 0x4a, 0x6e, 0x84, 0xc4, 0x71, 0x2c, 0xac, 0x28, 0x69, 0x57, 0xa1, 0x94,
	0x36, 0x90, 0x24, 0x0c, 0x25, 0x6a, 0x82, 0x27, 0x81, 0x51, 0x95, 0xa4, 0x4a, 0x24, 0xf6, 0xa5,
	0x68, 0x81, 0x28, 0xa2, 0x8a, 0x14, 0x6b, 0x1a, 0x3c, 0x53, 0xb6, 0x43, 0x8a, 0xc8, 0xb5, 0x9a,
	0x23, 0x8f, 0x61, 0x49, 0x20, 0x0f, 0xb2, 0x15, 0x92, 0x60, 0x48, 0x83, 0x38, 0x23, 0x00, 0xc5,
	0x2f, 0x05, 0xbc, 0xc9, 0x13, 0x1c, 0xd6, 0x04, 0x3e, 0x41, 0xa5, 0x90, 0xb6, 0xfe, 0xab, 0x39,
	0xf2, 0x14, 0xd6, 0xc2, 0x3d, 0x9f, 0x28, 0xf1, 0x79, 0x26, 0x3e, 0x8b, 0x48, 0x29, 0xd1, 0x2a,
	0x89, 0xe2, 0x02, 0x61, 0x15, 0x5e, 0xc3, 0x91, 0x55, 0x29, 0x78, 0x01, 0x59, 0x95, 0xba, 0xbb,
	0xe7, 0xc8, 0x77, 0xb0, 0x22, 0x97, 0x1d, 0x32, 0x9e, 0x7d, 0xd1, 0x9d, 0x4a, 0xa9, 0x27, 0x2f,
	0x22, 0x05, 0x1e, 0x2e, 0x2e, 0xb8, 0xc0, 0xe3, 0x8b, 0x12, 0x2e, 0xf0, 0xe4, 0xa6, 0x23, 0x8a,
	0x32, 0xdc, 0x94, 0x51, 0x51, 0xc6, 0xb7, 0x71, 0x14, 0x9d, 0xe4, 0x62, 0x2d, 0xcc, 0x19, 0x2f,
	0xc2, 0x24, 0x42, 0x7b, 0x98, 0x65, 0x4e, 0xca, 0xe6, 0x9c, 0x23, 0xaf, 0xa0, 0x14, 0xd9, 0x71,
	0xc9, 0x6d, 0x4c, 0x9f, 0xf4, 0xee, 0x4e, 0xd6, 0x35, 0x4e, 0x1c, 0xde, 0x64, 0x51, 0xe2, 0x52,
	0x76, 0x66, 0x94, 0xb8, 0xd4, 0xf5, 0x57, 0x18, 0x18, 0xd9, 0x55, 0x49, 0x9c, 0xe3, 0x30, 0xcb,
	0xc0, 0xf4, 0x15, 0x37, 0x47, 0xde, 0x41, 0x39, 0xbe, 0x89, 0xa2, 0xce, 0xcb, 0xd8, 0x7f, 0x95,
	0x7b, 0x13, 0x28, 0x42, 0xd1, 0xe7, 0xb0, 0x11, 0x5d, 0xde, 0xc8, 0x9d, 0xc9, 0xbb, 0xaa, 0x72,
	0x77, 0xca, 0xd6, 0xe7, 0x07, 0x14, 0xef, 0x1e, 0x28, 0xa0, 0x29, 0x0b, 0x15, 0x0a, 0x68, 0xda,
	0xc2, 0xa2, 0xe6, 0x9e, 0x7c, 0xf1, 0xe3, 0x67, 0x03, 0x83, 0x5d, 0x78, 0xdd, 0x46, 0xcf, 0x1e,
	0xee, 0x9b, 0x9e, 0xe1, 0x0e, 0xbc, 0x4b, 0xba, 0xef, 0xf7, 0x29, 0xc7, 0xc6, 0x8f, 0x06, 0xf6,
	0xbe, 0x94, 0xd1, 0x5d, 0x16, 0x5f, 0xbe, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x08, 0xd1,
	0x09, 0xf9, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context1.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrudUsersClient is the client API for CrudUsers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrudUsersClient interface {
	// Get a user's basic data to be displayed in the header navigation section.
	GetUserHeaderData(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*UserHeaderData, error)
	// Update a user's basic data.
	UpdateBasicUserData(ctx context1.Context, in *UpdateBasicUserDataRequest, opts ...grpc.CallOption) (*UpdateBasicUserDataResponse, error)
	// Get a user's basic data to be dislayed in page.
	GetBasicUserData(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*dataformat.BasicUserData, error)
	// Get the list of users followed by a given user.
	GetUserFollowingIds(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*UserList, error)
	// Mark unread notifications as read.
	MarkAllAsRead(ctx context1.Context, in *ReadNotifsRequest, opts ...grpc.CallOption) (*ReadNotifsResponse, error)
	// Clear all the notifications.
	ClearNotifs(ctx context1.Context, in *ClearNotifsRequest, opts ...grpc.CallOption) (*ClearNotifsResponse, error)
	// Follow a user.
	FollowUser(ctx context1.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*FollowUserResponse, error)
	// Unfollow a user.
	UnfollowUser(ctx context1.Context, in *UnfollowUserRequest, opts ...grpc.CallOption) (*UnfollowUserResponse, error)
	// Request to save thread.
	SaveThread(ctx context1.Context, in *SaveThreadRequest, opts ...grpc.CallOption) (*SaveThreadResponse, error)
	// Remove reference to thread from list of saved threads of user.
	RemoveSaved(ctx context1.Context, in *RemoveSavedRequest, opts ...grpc.CallOption) (*RemoveSavedResponse, error)
	// Get either following or followers users' basic data.
	ViewUsers(ctx context1.Context, in *ViewUsersRequest, opts ...grpc.CallOption) (*ViewUsersResponse, error)
	// Get username basic data, following, followers and threads created.
	ViewUserByUsername(ctx context1.Context, in *ViewUserByUsernameRequest, opts ...grpc.CallOption) (*ViewUserResponse, error)
	// Get dashboard data for a given user.
	GetDashboardData(ctx context1.Context, in *GetDashboardDataRequest, opts ...grpc.CallOption) (*DashboardData, error)
	// Validate user credentials to login.
	Login(ctx context1.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Register new user.
	RegisterUser(ctx context1.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	// SaveNotif updates the given notification if it was already there, or appends
	// it to the list of unread notifications of the given user.
	// If the notification was in the list of read notifications, it removes it from
	// there.
	SaveNotif(ctx context1.Context, in *cheroapi.NotifyUser, opts ...grpc.CallOption) (*SaveNotifResponse, error)
	// Append thread to list of recent activity of user.
	CreateThread(ctx context1.Context, in *CreateThreadRequest, opts ...grpc.CallOption) (*CreateThreadResponse, error)
	// Append comment to list of recent activity of user.
	Comment(ctx context1.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)
	// Append subcomment to list of recent activity of user.
	Subcomment(ctx context1.Context, in *SubcommentRequest, opts ...grpc.CallOption) (*SubcommentResponse, error)
	// Move thread from recent activity of user to list of old activity.
	OldThread(ctx context1.Context, in *OldThreadRequest, opts ...grpc.CallOption) (*OldThreadResponse, error)
	// Move comment from recent activity of user to list of old activity.
	OldComment(ctx context1.Context, in *OldCommentRequest, opts ...grpc.CallOption) (*OldCommentResponse, error)
	// Move subcomment from recent activity of user to list of old activity.
	OldSubcomment(ctx context1.Context, in *OldSubcommentRequest, opts ...grpc.CallOption) (*OldSubcommentResponse, error)
	// Remove reference to thread from list of activity of user.
	DeleteThread(ctx context1.Context, in *DeleteThreadRequest, opts ...grpc.CallOption) (*DeleteThreadResponse, error)
	// Remove reference to comment from list of activity of user.
	DeleteComment(ctx context1.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error)
	// Remove reference to subcomment from list of activity of user.
	DeleteSubcomment(ctx context1.Context, in *DeleteSubcommentRequest, opts ...grpc.CallOption) (*DeleteSubcommentResponse, error)
	// Get the recent activity of a user.
	RecentActivity(ctx context1.Context, in *RecentActivityRequest, opts ...grpc.CallOption) (*RecentActivityResponse, error)
	// Get saved threads of a user.
	SavedThreads(ctx context1.Context, in *SavedThreadsRequest, opts ...grpc.CallOption) (*SavedThreadsResponse, error)
}

type crudUsersClient struct {
	cc grpc.ClientConnInterface
}

func NewCrudUsersClient(cc grpc.ClientConnInterface) CrudUsersClient {
	return &crudUsersClient{cc}
}

func (c *crudUsersClient) GetUserHeaderData(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*UserHeaderData, error) {
	out := new(UserHeaderData)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/GetUserHeaderData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) UpdateBasicUserData(ctx context1.Context, in *UpdateBasicUserDataRequest, opts ...grpc.CallOption) (*UpdateBasicUserDataResponse, error) {
	out := new(UpdateBasicUserDataResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/UpdateBasicUserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) GetBasicUserData(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*dataformat.BasicUserData, error) {
	out := new(dataformat.BasicUserData)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/GetBasicUserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) GetUserFollowingIds(ctx context1.Context, in *GetBasicUserDataRequest, opts ...grpc.CallOption) (*UserList, error) {
	out := new(UserList)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/GetUserFollowingIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) MarkAllAsRead(ctx context1.Context, in *ReadNotifsRequest, opts ...grpc.CallOption) (*ReadNotifsResponse, error) {
	out := new(ReadNotifsResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/MarkAllAsRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) ClearNotifs(ctx context1.Context, in *ClearNotifsRequest, opts ...grpc.CallOption) (*ClearNotifsResponse, error) {
	out := new(ClearNotifsResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/ClearNotifs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) FollowUser(ctx context1.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*FollowUserResponse, error) {
	out := new(FollowUserResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/FollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) UnfollowUser(ctx context1.Context, in *UnfollowUserRequest, opts ...grpc.CallOption) (*UnfollowUserResponse, error) {
	out := new(UnfollowUserResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/UnfollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) SaveThread(ctx context1.Context, in *SaveThreadRequest, opts ...grpc.CallOption) (*SaveThreadResponse, error) {
	out := new(SaveThreadResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/SaveThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) RemoveSaved(ctx context1.Context, in *RemoveSavedRequest, opts ...grpc.CallOption) (*RemoveSavedResponse, error) {
	out := new(RemoveSavedResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/RemoveSaved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) ViewUsers(ctx context1.Context, in *ViewUsersRequest, opts ...grpc.CallOption) (*ViewUsersResponse, error) {
	out := new(ViewUsersResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/ViewUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) ViewUserByUsername(ctx context1.Context, in *ViewUserByUsernameRequest, opts ...grpc.CallOption) (*ViewUserResponse, error) {
	out := new(ViewUserResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/ViewUserByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) GetDashboardData(ctx context1.Context, in *GetDashboardDataRequest, opts ...grpc.CallOption) (*DashboardData, error) {
	out := new(DashboardData)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/GetDashboardData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) Login(ctx context1.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) RegisterUser(ctx context1.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) SaveNotif(ctx context1.Context, in *cheroapi.NotifyUser, opts ...grpc.CallOption) (*SaveNotifResponse, error) {
	out := new(SaveNotifResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/SaveNotif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) CreateThread(ctx context1.Context, in *CreateThreadRequest, opts ...grpc.CallOption) (*CreateThreadResponse, error) {
	out := new(CreateThreadResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/CreateThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) Comment(ctx context1.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error) {
	out := new(CommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/Comment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) Subcomment(ctx context1.Context, in *SubcommentRequest, opts ...grpc.CallOption) (*SubcommentResponse, error) {
	out := new(SubcommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/Subcomment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) OldThread(ctx context1.Context, in *OldThreadRequest, opts ...grpc.CallOption) (*OldThreadResponse, error) {
	out := new(OldThreadResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/OldThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) OldComment(ctx context1.Context, in *OldCommentRequest, opts ...grpc.CallOption) (*OldCommentResponse, error) {
	out := new(OldCommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/OldComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) OldSubcomment(ctx context1.Context, in *OldSubcommentRequest, opts ...grpc.CallOption) (*OldSubcommentResponse, error) {
	out := new(OldSubcommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/OldSubcomment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) DeleteThread(ctx context1.Context, in *DeleteThreadRequest, opts ...grpc.CallOption) (*DeleteThreadResponse, error) {
	out := new(DeleteThreadResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/DeleteThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) DeleteComment(ctx context1.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error) {
	out := new(DeleteCommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) DeleteSubcomment(ctx context1.Context, in *DeleteSubcommentRequest, opts ...grpc.CallOption) (*DeleteSubcommentResponse, error) {
	out := new(DeleteSubcommentResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/DeleteSubcomment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) RecentActivity(ctx context1.Context, in *RecentActivityRequest, opts ...grpc.CallOption) (*RecentActivityResponse, error) {
	out := new(RecentActivityResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/RecentActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crudUsersClient) SavedThreads(ctx context1.Context, in *SavedThreadsRequest, opts ...grpc.CallOption) (*SavedThreadsResponse, error) {
	out := new(SavedThreadsResponse)
	err := c.cc.Invoke(ctx, "/userapi.CrudUsers/SavedThreads", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrudUsersServer is the server API for CrudUsers service.
type CrudUsersServer interface {
	// Get a user's basic data to be displayed in the header navigation section.
	GetUserHeaderData(context1.Context, *GetBasicUserDataRequest) (*UserHeaderData, error)
	// Update a user's basic data.
	UpdateBasicUserData(context1.Context, *UpdateBasicUserDataRequest) (*UpdateBasicUserDataResponse, error)
	// Get a user's basic data to be dislayed in page.
	GetBasicUserData(context1.Context, *GetBasicUserDataRequest) (*dataformat.BasicUserData, error)
	// Get the list of users followed by a given user.
	GetUserFollowingIds(context1.Context, *GetBasicUserDataRequest) (*UserList, error)
	// Mark unread notifications as read.
	MarkAllAsRead(context1.Context, *ReadNotifsRequest) (*ReadNotifsResponse, error)
	// Clear all the notifications.
	ClearNotifs(context1.Context, *ClearNotifsRequest) (*ClearNotifsResponse, error)
	// Follow a user.
	FollowUser(context1.Context, *FollowUserRequest) (*FollowUserResponse, error)
	// Unfollow a user.
	UnfollowUser(context1.Context, *UnfollowUserRequest) (*UnfollowUserResponse, error)
	// Request to save thread.
	SaveThread(context1.Context, *SaveThreadRequest) (*SaveThreadResponse, error)
	// Remove reference to thread from list of saved threads of user.
	RemoveSaved(context1.Context, *RemoveSavedRequest) (*RemoveSavedResponse, error)
	// Get either following or followers users' basic data.
	ViewUsers(context1.Context, *ViewUsersRequest) (*ViewUsersResponse, error)
	// Get username basic data, following, followers and threads created.
	ViewUserByUsername(context1.Context, *ViewUserByUsernameRequest) (*ViewUserResponse, error)
	// Get dashboard data for a given user.
	GetDashboardData(context1.Context, *GetDashboardDataRequest) (*DashboardData, error)
	// Validate user credentials to login.
	Login(context1.Context, *LoginRequest) (*LoginResponse, error)
	// Register new user.
	RegisterUser(context1.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	// SaveNotif updates the given notification if it was already there, or appends
	// it to the list of unread notifications of the given user.
	// If the notification was in the list of read notifications, it removes it from
	// there.
	SaveNotif(context1.Context, *cheroapi.NotifyUser) (*SaveNotifResponse, error)
	// Append thread to list of recent activity of user.
	CreateThread(context1.Context, *CreateThreadRequest) (*CreateThreadResponse, error)
	// Append comment to list of recent activity of user.
	Comment(context1.Context, *CommentRequest) (*CommentResponse, error)
	// Append subcomment to list of recent activity of user.
	Subcomment(context1.Context, *SubcommentRequest) (*SubcommentResponse, error)
	// Move thread from recent activity of user to list of old activity.
	OldThread(context1.Context, *OldThreadRequest) (*OldThreadResponse, error)
	// Move comment from recent activity of user to list of old activity.
	OldComment(context1.Context, *OldCommentRequest) (*OldCommentResponse, error)
	// Move subcomment from recent activity of user to list of old activity.
	OldSubcomment(context1.Context, *OldSubcommentRequest) (*OldSubcommentResponse, error)
	// Remove reference to thread from list of activity of user.
	DeleteThread(context1.Context, *DeleteThreadRequest) (*DeleteThreadResponse, error)
	// Remove reference to comment from list of activity of user.
	DeleteComment(context1.Context, *DeleteCommentRequest) (*DeleteCommentResponse, error)
	// Remove reference to subcomment from list of activity of user.
	DeleteSubcomment(context1.Context, *DeleteSubcommentRequest) (*DeleteSubcommentResponse, error)
	// Get the recent activity of a user.
	RecentActivity(context1.Context, *RecentActivityRequest) (*RecentActivityResponse, error)
	// Get saved threads of a user.
	SavedThreads(context1.Context, *SavedThreadsRequest) (*SavedThreadsResponse, error)
}

// UnimplementedCrudUsersServer can be embedded to have forward compatible implementations.
type UnimplementedCrudUsersServer struct {
}

func (*UnimplementedCrudUsersServer) GetUserHeaderData(ctx context1.Context, req *GetBasicUserDataRequest) (*UserHeaderData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserHeaderData not implemented")
}
func (*UnimplementedCrudUsersServer) UpdateBasicUserData(ctx context1.Context, req *UpdateBasicUserDataRequest) (*UpdateBasicUserDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBasicUserData not implemented")
}
func (*UnimplementedCrudUsersServer) GetBasicUserData(ctx context1.Context, req *GetBasicUserDataRequest) (*dataformat.BasicUserData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBasicUserData not implemented")
}
func (*UnimplementedCrudUsersServer) GetUserFollowingIds(ctx context1.Context, req *GetBasicUserDataRequest) (*UserList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFollowingIds not implemented")
}
func (*UnimplementedCrudUsersServer) MarkAllAsRead(ctx context1.Context, req *ReadNotifsRequest) (*ReadNotifsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkAllAsRead not implemented")
}
func (*UnimplementedCrudUsersServer) ClearNotifs(ctx context1.Context, req *ClearNotifsRequest) (*ClearNotifsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearNotifs not implemented")
}
func (*UnimplementedCrudUsersServer) FollowUser(ctx context1.Context, req *FollowUserRequest) (*FollowUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowUser not implemented")
}
func (*UnimplementedCrudUsersServer) UnfollowUser(ctx context1.Context, req *UnfollowUserRequest) (*UnfollowUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowUser not implemented")
}
func (*UnimplementedCrudUsersServer) SaveThread(ctx context1.Context, req *SaveThreadRequest) (*SaveThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveThread not implemented")
}
func (*UnimplementedCrudUsersServer) RemoveSaved(ctx context1.Context, req *RemoveSavedRequest) (*RemoveSavedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSaved not implemented")
}
func (*UnimplementedCrudUsersServer) ViewUsers(ctx context1.Context, req *ViewUsersRequest) (*ViewUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewUsers not implemented")
}
func (*UnimplementedCrudUsersServer) ViewUserByUsername(ctx context1.Context, req *ViewUserByUsernameRequest) (*ViewUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewUserByUsername not implemented")
}
func (*UnimplementedCrudUsersServer) GetDashboardData(ctx context1.Context, req *GetDashboardDataRequest) (*DashboardData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDashboardData not implemented")
}
func (*UnimplementedCrudUsersServer) Login(ctx context1.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedCrudUsersServer) RegisterUser(ctx context1.Context, req *RegisterUserRequest) (*RegisterUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedCrudUsersServer) SaveNotif(ctx context1.Context, req *cheroapi.NotifyUser) (*SaveNotifResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveNotif not implemented")
}
func (*UnimplementedCrudUsersServer) CreateThread(ctx context1.Context, req *CreateThreadRequest) (*CreateThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateThread not implemented")
}
func (*UnimplementedCrudUsersServer) Comment(ctx context1.Context, req *CommentRequest) (*CommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment not implemented")
}
func (*UnimplementedCrudUsersServer) Subcomment(ctx context1.Context, req *SubcommentRequest) (*SubcommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subcomment not implemented")
}
func (*UnimplementedCrudUsersServer) OldThread(ctx context1.Context, req *OldThreadRequest) (*OldThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OldThread not implemented")
}
func (*UnimplementedCrudUsersServer) OldComment(ctx context1.Context, req *OldCommentRequest) (*OldCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OldComment not implemented")
}
func (*UnimplementedCrudUsersServer) OldSubcomment(ctx context1.Context, req *OldSubcommentRequest) (*OldSubcommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OldSubcomment not implemented")
}
func (*UnimplementedCrudUsersServer) DeleteThread(ctx context1.Context, req *DeleteThreadRequest) (*DeleteThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteThread not implemented")
}
func (*UnimplementedCrudUsersServer) DeleteComment(ctx context1.Context, req *DeleteCommentRequest) (*DeleteCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedCrudUsersServer) DeleteSubcomment(ctx context1.Context, req *DeleteSubcommentRequest) (*DeleteSubcommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubcomment not implemented")
}
func (*UnimplementedCrudUsersServer) RecentActivity(ctx context1.Context, req *RecentActivityRequest) (*RecentActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecentActivity not implemented")
}
func (*UnimplementedCrudUsersServer) SavedThreads(ctx context1.Context, req *SavedThreadsRequest) (*SavedThreadsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavedThreads not implemented")
}

func RegisterCrudUsersServer(s *grpc.Server, srv CrudUsersServer) {
	s.RegisterService(&_CrudUsers_serviceDesc, srv)
}

func _CrudUsers_GetUserHeaderData_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBasicUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).GetUserHeaderData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/GetUserHeaderData",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).GetUserHeaderData(ctx, req.(*GetBasicUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_UpdateBasicUserData_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBasicUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).UpdateBasicUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/UpdateBasicUserData",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).UpdateBasicUserData(ctx, req.(*UpdateBasicUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_GetBasicUserData_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBasicUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).GetBasicUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/GetBasicUserData",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).GetBasicUserData(ctx, req.(*GetBasicUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_GetUserFollowingIds_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBasicUserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).GetUserFollowingIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/GetUserFollowingIds",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).GetUserFollowingIds(ctx, req.(*GetBasicUserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_MarkAllAsRead_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadNotifsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).MarkAllAsRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/MarkAllAsRead",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).MarkAllAsRead(ctx, req.(*ReadNotifsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_ClearNotifs_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearNotifsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).ClearNotifs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/ClearNotifs",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).ClearNotifs(ctx, req.(*ClearNotifsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_FollowUser_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).FollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/FollowUser",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).FollowUser(ctx, req.(*FollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_UnfollowUser_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnfollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).UnfollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/UnfollowUser",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).UnfollowUser(ctx, req.(*UnfollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_SaveThread_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).SaveThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/SaveThread",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).SaveThread(ctx, req.(*SaveThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_RemoveSaved_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSavedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).RemoveSaved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/RemoveSaved",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).RemoveSaved(ctx, req.(*RemoveSavedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_ViewUsers_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).ViewUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/ViewUsers",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).ViewUsers(ctx, req.(*ViewUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_ViewUserByUsername_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewUserByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).ViewUserByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/ViewUserByUsername",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).ViewUserByUsername(ctx, req.(*ViewUserByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_GetDashboardData_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDashboardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).GetDashboardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/GetDashboardData",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).GetDashboardData(ctx, req.(*GetDashboardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_Login_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/Login",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_RegisterUser_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/RegisterUser",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_SaveNotif_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(cheroapi.NotifyUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).SaveNotif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/SaveNotif",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).SaveNotif(ctx, req.(*cheroapi.NotifyUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_CreateThread_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).CreateThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/CreateThread",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).CreateThread(ctx, req.(*CreateThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_Comment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).Comment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/Comment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).Comment(ctx, req.(*CommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_Subcomment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubcommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).Subcomment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/Subcomment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).Subcomment(ctx, req.(*SubcommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_OldThread_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OldThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).OldThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/OldThread",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).OldThread(ctx, req.(*OldThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_OldComment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OldCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).OldComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/OldComment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).OldComment(ctx, req.(*OldCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_OldSubcomment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OldSubcommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).OldSubcomment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/OldSubcomment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).OldSubcomment(ctx, req.(*OldSubcommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_DeleteThread_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).DeleteThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/DeleteThread",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).DeleteThread(ctx, req.(*DeleteThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_DeleteComment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/DeleteComment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_DeleteSubcomment_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubcommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).DeleteSubcomment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/DeleteSubcomment",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).DeleteSubcomment(ctx, req.(*DeleteSubcommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_RecentActivity_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecentActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).RecentActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/RecentActivity",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).RecentActivity(ctx, req.(*RecentActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CrudUsers_SavedThreads_Handler(srv interface{}, ctx context1.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavedThreadsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrudUsersServer).SavedThreads(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userapi.CrudUsers/SavedThreads",
	}
	handler := func(ctx context1.Context, req interface{}) (interface{}, error) {
		return srv.(CrudUsersServer).SavedThreads(ctx, req.(*SavedThreadsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrudUsers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userapi.CrudUsers",
	HandlerType: (*CrudUsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserHeaderData",
			Handler:    _CrudUsers_GetUserHeaderData_Handler,
		},
		{
			MethodName: "UpdateBasicUserData",
			Handler:    _CrudUsers_UpdateBasicUserData_Handler,
		},
		{
			MethodName: "GetBasicUserData",
			Handler:    _CrudUsers_GetBasicUserData_Handler,
		},
		{
			MethodName: "GetUserFollowingIds",
			Handler:    _CrudUsers_GetUserFollowingIds_Handler,
		},
		{
			MethodName: "MarkAllAsRead",
			Handler:    _CrudUsers_MarkAllAsRead_Handler,
		},
		{
			MethodName: "ClearNotifs",
			Handler:    _CrudUsers_ClearNotifs_Handler,
		},
		{
			MethodName: "FollowUser",
			Handler:    _CrudUsers_FollowUser_Handler,
		},
		{
			MethodName: "UnfollowUser",
			Handler:    _CrudUsers_UnfollowUser_Handler,
		},
		{
			MethodName: "SaveThread",
			Handler:    _CrudUsers_SaveThread_Handler,
		},
		{
			MethodName: "RemoveSaved",
			Handler:    _CrudUsers_RemoveSaved_Handler,
		},
		{
			MethodName: "ViewUsers",
			Handler:    _CrudUsers_ViewUsers_Handler,
		},
		{
			MethodName: "ViewUserByUsername",
			Handler:    _CrudUsers_ViewUserByUsername_Handler,
		},
		{
			MethodName: "GetDashboardData",
			Handler:    _CrudUsers_GetDashboardData_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _CrudUsers_Login_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _CrudUsers_RegisterUser_Handler,
		},
		{
			MethodName: "SaveNotif",
			Handler:    _CrudUsers_SaveNotif_Handler,
		},
		{
			MethodName: "CreateThread",
			Handler:    _CrudUsers_CreateThread_Handler,
		},
		{
			MethodName: "Comment",
			Handler:    _CrudUsers_Comment_Handler,
		},
		{
			MethodName: "Subcomment",
			Handler:    _CrudUsers_Subcomment_Handler,
		},
		{
			MethodName: "OldThread",
			Handler:    _CrudUsers_OldThread_Handler,
		},
		{
			MethodName: "OldComment",
			Handler:    _CrudUsers_OldComment_Handler,
		},
		{
			MethodName: "OldSubcomment",
			Handler:    _CrudUsers_OldSubcomment_Handler,
		},
		{
			MethodName: "DeleteThread",
			Handler:    _CrudUsers_DeleteThread_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _CrudUsers_DeleteComment_Handler,
		},
		{
			MethodName: "DeleteSubcomment",
			Handler:    _CrudUsers_DeleteSubcomment_Handler,
		},
		{
			MethodName: "RecentActivity",
			Handler:    _CrudUsers_RecentActivity_Handler,
		},
		{
			MethodName: "SavedThreads",
			Handler:    _CrudUsers_SavedThreads_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userapi.proto",
}
